% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lmrob2.R
\name{lmrobdet.control}
\alias{lmrobdet.control}
\title{Tuning parameters for lmrobdet}
\usage{
lmrobdet.control(seed = NULL, tuning.chi = 1.5477, bb = 0.5,
  tuning.psi = 3.4434, max.it = 100, refine.tol = 1e-07,
  rel.tol = 1e-07, refine.PY = 10, solve.tol = 1e-07, trace.lev = 0,
  mts = 1000, compute.rd = FALSE, psi = "bisquare", corr.b = TRUE,
  split.type = "f", initial = "S", prosac = 0.5,
  clean.method = "threshold", C.res = 2, prop = 0.2, py.nit = 20,
  en.tol = 1e-05, mscale.maxit = 50, mscale.tol = 1e-06,
  mscale.rho.fun = "bisquare")
}
\arguments{
\item{seed}{\code{NULL}}

\item{tuning.chi}{tuning constant for the function used to compute the M-scale
for the S-estimator. For the estimator to be consistent it needs to
be matched with the value of \code{bb} below. It defaults to 1.5477, which
together with \code{bb = 0.5} yields an estimator with maximum breakdown point.}

\item{bb}{tuning constant (between 0 and 1) for the M-scale used to compute the initial S-estimator. It
determines the robusness (breakdown point) of the resulting MM-estimator, which is
\code{min(bb, 1-bb)}. Defaults to 0.5}

\item{tuning.psi}{tuning constant for the re-descending M-estimator. Its default
value (3.4434) returns an estimator with an asymptoti efficiency of 85% when errors
have a normal distribution}

\item{max.it}{maximum number of IRWLS iterations for the MM-estimator}

\item{refine.tol}{relative covergence tolerance for the S-estimator}

\item{rel.tol}{relative covergence tolerance for the IRWLS iterations for the MM-estimator}

\item{refine.PY}{number of refinement steps for the Pen~a-Yohai candidates}

\item{solve.tol}{relative tolerance for inversion}

\item{trace.lev}{positive values (increasingly) provide details on the progress of the MM-algorithm}

\item{mts}{maximum number of subsamples. Un-used, but passed (unnecessarily) to the function
that performs M-iterations (lmrob..M..fit), so set here.}

\item{compute.rd}{logical value indicating whether robust leverage distances need to be computed.}

\item{psi}{string specifying the type of loss function to be used.}

\item{corr.b}{logical value indicating whether a finite-sample correction should be applied
to the M-scale parameter \code{bb}}

\item{split.type}{determines how categorical and continuous variables are split. See
\code{\link[robustbase]{splitFrame}}.}

\item{initial}{string specifying the initial value for the M-step of the MM-estimator. Valid
options are \code{'S'}, for an S-estimator and \code{'MS'} for an M-S estimator which is
appropriate when there are categorical explanatory variables in the model.}

\item{prosac}{For \code{pyinit}, proportion of observations to remove based on PSCs. See \code{\link{pyinit}}.}

\item{clean.method}{For \code{pyinit}, how to clean the data based on large residuals. If
\code{"threshold"}, all observations with scaled residuals larger than \code{C.res} will
be removed, if \code{"proportion"}, observations with the largest \code{prop} residuals will
be removed. See \code{\link{pyinit}}.}

\item{C.res}{See parameter \code{clean.method} above. See \code{\link{pyinit}}.}

\item{prop}{See parameter \code{clean.method} above. See \code{\link{pyinit}}.}

\item{py.nit}{Maximum number of iterations. See \code{\link{pyinit}}.}

\item{en.tol}{Relative tolerance for convergence.  See \code{\link{pyinit}}.}

\item{mscale.maxit}{Maximum number of iterations for the M-scale algorithm. See \code{\link{pyinit}}.}

\item{mscale.tol}{Convergence tolerance for the M-scale algorithm. See \code{\link{pyinit}}.}

\item{mscale.rho.fun}{String indicating the loss function used for the M-scale. See \code{\link{pyinit}}.}
}
\value{
A list with the necessary tuning parameters.
}
\description{
This function sets tuning parameters for the MM-based Distance Constrained
Maximum Likelihood regression estimators computed by \code{lmrobdet}.
}
\details{
There are 2 sets of tuning parameters: those related to the MM-estimator,
and those controlling the initial Pen~a-Yohai estimator.
}
\examples{
data(coleman)
m2 <- lmrobdet(Y ~ ., data=coleman, control=lmrobdet.control(refine.PY=50))

}
\seealso{
\code{\link{pyinit}}
}
\author{
Matias Salibian-Barrera, \email{matias@stat.ubc.ca}
}
